name: Deploy Hugo Blog to Two Repositories

on:
  push:
    branches: [ main ]

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.120.4
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.DEPLOY_TOKEN }}
      
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://${{ github.repository_owner }}.github.io/blog/"
      
      - name: Deploy source to blog-source repository
        run: |
          # Cleanup and clone target repository
          rm -rf temp-source
          git clone https://${{ secrets.DEPLOY_TOKEN }}@github.com/${{ github.repository_owner }}/blog-source.git temp-source
          cd temp-source
          
          # Clear existing content
          rm -rf *
          rm -rf .*
          
          # Copy source files (exclude specific folders)
          rsync -av --exclude='.git' --exclude='.github' --exclude='public' --exclude='node_modules' ../ ./
          
          # Commit and push
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy source from ${{ github.sha }}" || exit 0
          git push origin main
      
      - name: Deploy built site to blog repository
        run: |
          # Cleanup and clone target repository
          rm -rf temp-blog
          git clone https://${{ secrets.DEPLOY_TOKEN }}@github.com/${{ github.repository_owner }}/blog.git temp-blog
          cd temp-blog
          
          # Clear existing content
          rm -rf *
          rm -rf .*
          
          # Copy built site
          cp -r ../public/* ./
          
          # Commit and push
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy site from ${{ github.sha }}" || exit 0
          git push origin main
